{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "By design",
    "ClosedDate": "2012-10-20T02:16:21.433-07:00",
    "CommentCount": 2,
    "Custom": "",
    "Description": "in the examples , check 2b) Progressive enhancement (using select) \n\nthere are 4 options, but 3 stars are shown.\n\ni created a page with 5 options, and the result are 4 stars.\n\nso there is a bug relating to counting number of elements. . could be an easy fix, with an index starting from 0 or from 1 to a max of the number of options (or number of options -1).",
    "LastUpdatedDate": "2013-05-16T04:24:22.71-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "rateit",
    "ReportedDate": "2012-10-19T13:54:58.207-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "stars shown , less than options",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 1144
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "That's according to design. The first option is the 0. Like in the range input field we have a 0 value, also in a select box we should have a 0 value. ",
      "PostedDate": "2012-10-20T02:15:33.08-07:00",
      "Id": 141074
    },
    {
      "Message": "oh okay, that was not clear in the documentation. \r\n\r\nyou have a very nice robust code to rate anything. The example is not written in a very clear way to show how it works perfectly by just including the scripts and specifying the class name.\r\n\r\ni found the point talking about the fix to make it compatible with range, but did not really get to me that i have to start from 0.\r\n\r\ngreat code. \r\n\r\nthanks for your response too.",
      "PostedDate": "2012-10-20T06:02:51.857-07:00",
      "Id": 141075
    }
  ]
}