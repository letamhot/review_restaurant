[
  {
    "Id": "1025326",
    "ThreadId": "439082",
    "Html": "Hi. Can Rateit plugin block user of double clicking on raiting by IP?<br />\n",
    "PostedDate": "2013-04-04T04:33:09.383-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1026377",
    "ThreadId": "439082",
    "Html": "Rateit doesn't have this functionality built in, but of course you can use server-side code, cookies/local storage, or a combination thereof to achieve this. For example:<br />\n<br />\n<strong>index.php?itemId=3</strong><br />\n<pre><code>&lt;?php $itemId = false; ?&gt;\n&lt;?php if(isset($_GET['itemId'])) { $itemId = $_GET['itemId']; } ?&gt;\n\n&lt;div id=&quot;usermsg&quot; style=&quot;display: none;&quot;&gt;&lt;/div&gt;\n&lt;input type=&quot;hidden&quot; id=&quot;item-id&quot; value=&quot;&lt;?php if($itemId) { echo $itemId; } ?&gt;&quot; /&gt;\n&lt;div class=&quot;rateit&quot; id=&quot;rating&quot;&gt;&lt;/div&gt;</code></pre>\n\n<strong>AJAX</strong><br />\n<pre><code>$('#rating').on('rated', function(event, value) {\n  $.ajax({\n    type: 'POST',\n    url : 'ratinghandler.php',\n    data: '?itemId=' + $('#item-id').val() + '&amp;rating=' + value,\n    success: function(data) {\n      if(data === '1') {\n        $('#usermsg').html('Your rating was submitted successfully!').show();\n      } else if(data === '2') {\n        $('#usermsg').html('You have already rated this item!').show();\n      } else {\n        $('#usermsg').html('An error occurred. Please try again later.').show();\n      }\n    };\n  });\n});</code></pre>\n\nAnd then, since I'm using PHP as an example here:<br />\n<br />\n<strong>ratinghandler.php</strong><br />\n<pre><code>&lt;?php\n  $itemId = false;\n  $rating = false;\n\n  if(isset($_GET['itemId'])) {\n    $itemId = $_GET['itemId'];\n  } else {\n    exit('0'); // we want to use exit('0') instead of echo 0 to stop code execution\n  }\n\n  if(isset($_GET['rating'])) {\n    $rating = $_GET['rating'];\n  } else {\n    exit('0');\n  }\n\n  function checkIP($item, $ip) {\n    // check the db here to see if $ip matches an ip in the database for this $itemId\n    // if there's a match, return true, else return false\n  }\n\n  if($itemId &amp;&amp; $rating) {\n    $ip      = $_SERVER['REMOTE_ADDR'];\n    $ipCheck = checkIP($itemId, $ip);\n\n    if(!$ipCheck) {\n      // go ahead with the rating insert\n      exit('1');\n    } else {\n      exit('2');\n    }\n  } else {\n    exit('0');\n  }\n?&gt;</code></pre>\n\n<strong>Possible Caveats:</strong><br />\n<ul>\n<li>People with dynamic IP addresses will be able to rate again when their IP changes.</li>\n<li>People with dynamic IP addresses may be denied the ability to rate if the last person who had that IP submitted a rating.</li>\n<li>\nPeople using VPNs or proxy servers could circumvent this system.<br />\n</li>\n</ul>\n<strong>Possible Work-arounds:</strong><br />\n<ul>\n<li>Use cookies and/or local storage in conjunction with IP tracking (clearing the browser cache and changing IPs is still possible though).</li>\n<li>You may choose to track all ratings in the database by IP address, rather than only whether they've rated an item or not. This way, you could allow them to <em>update</em> their rating (overwriting their old rating in the db using UPDATE) instead of simply denying them the ability to do so.</li>\n<li>\nUse IP tracking + cookies/local storage, <em>and</em> only allow logged in users to vote. This is probably your best bet.<br />\n</li>\n</ul>\nAlthough there is no 100% fool-proof way of preventing double voting since they could clear their cache, change their IP and create multiple accounts, there's nothing wrong with making it as much of a hassle as possible.<br />\n<br />\nKeep in mind though, I just wrote this code in the post on the fly. It's not tested, nor is it even complete. Consider it pseudo code. It's only intended to get you on the right track, but I hope it helps!<br />\n",
    "PostedDate": "2013-04-05T15:40:11.477-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]